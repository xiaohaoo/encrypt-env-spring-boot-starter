apply plugin: 'maven-publish'
apply plugin: 'signing'


jar {
    enabled = true
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenCenter(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = project.name
                packaging = 'jar'
                description = 'Spring Boot对配置参数脱敏处理Starter'
                url = 'https://github.com/xiaohaoo/encrypt-env-spring-boot-starter'
                scm {
                    connection = 'scm:git:https://github.com/xiaohaoo/encrypt-env-spring-boot-starter'
                    developerConnection = 'scm:git:https://github.com/xiaohaoo/encrypt-env-spring-boot-starter'
                    url = 'https://github.com/xiaohaoo/encrypt-env-spring-boot-starterl'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'xiaohao'
                        name = 'xiaohao'
                        email = 'sdwenhappy@163.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? "https://s01.oss.sonatype.org/content/repositories/snapshots/" : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign configurations.archives
}
